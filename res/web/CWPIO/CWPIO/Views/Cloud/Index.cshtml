@{
	Layout = null;
}

<!DOCTYPE HTML>
<html lang="en">
	<head>
		<title>Clouds</title>
		<meta charset="utf-8">

		
		<environment include="Development, Production">
			<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" />
			<link rel="stylesheet" href="~/css/site.css" />
			<link rel="stylesheet" href="~/css/components/header/styles.css" />
			<link rel="stylesheet" href="~/css/components/dotnav/styles.css" />
			<link rel="stylesheet" href="~/css/components/menu/styles.css" />
		</environment>
		<environment names="Development,Production">
			<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" />
			<link rel="stylesheet" href="~/css/site.css" />
			<link rel="stylesheet" href="~/css/components/header/styles.css" />
			<link rel="stylesheet" href="~/css/components/dotnav/styles.css" />
			<link rel="stylesheet" href="~/css/components/menu/styles.css" />
		</environment>
		<environment exclude="Development, Production">
			<link rel="stylesheet" href="https://ajax.aspnetcdn.com/ajax/bootstrap/3.3.7/css/bootstrap.min.css"
			      asp-fallback-href="~/lib/bootstrap/dist/css/bootstrap.min.css"
			      asp-fallback-test-class="sr-only" asp-fallback-test-property="position" asp-fallback-test-value="absolute" />
			<link rel="stylesheet" href="~/css/site.min.css" asp-append-version="true" />
		</environment>
		
		<style type="text/css">

			.b-block {
				background: none;
				/* position: fixed; */
				/* z-index: 1111111; */
				float: left;
				/* overflow: hidden; */
				margin: 63px auto 0;
				position: fixed;
				width: 960px;
				height: 100%;
				right: 0;
				left: 0;
				font-size: 58px;
				color: #e4e4e4;
				text-align: left;
				background-color: #1e477254;
				text-shadow: 0 -1px #1e4772;
				padding: 15px;
				box-shadow: 0px 36px 20px 20px #000000;
				background: linear-gradient;
				background: linear-gradient(180deg, rgb(31, 73, 117) 0%, rgba(0, 0, 0,.1) 100%);
			}
			
			body {
				background-color: #444;
				margin: 0px;
				overflow: hidden;
				font-family:Monospace;
				font-size:13px;
				text-align:center;
				font-weight: bold;
				text-align:center;
			}
			
			#c{
				position: fixed;
				left: 0;
				right: 0;
				top: 0;
				bottom: 0;
			}

			a {
				color:#0078ff;
			}
			svg {
				height: 16px;
				width: 16px;
				padding: 12px;
				margin-right: 10px;
				background: rgba(255, 255, 255, .4);
				-webkit-border-radius: 50px;
				-moz-border-radius: 50px;
				border-radius: 50px;
				float: left;
			}
			.cloud-wrapper {
/*				background: #444 !important;*/
			}
			
			.navbar {
				min-height: 63px;
				height: 63px;
			}
			.navbar-brand {
/*				box-shadow: -20px 7px 20px 0px #353535;*/
			}
			.navbar-inverse {
				background: inherit;
/*				background-color: #5f5f5f;*/
				background-color: #0000000f;
			}
			
			.navbar-right {
				display: none
			}
			
			.s-logo-2 {
				height: 30px;
				position: fixed;
				left: 20px;
				top: 17px;
			}
			
			.s-logo {
				position: fixed;
				left: 20px;
				bottom: 20px;
				width: 50px;
			}
		</style>
	</head>
	<body>
		@Html.Partial("_Header")
	
@*	<div class="b-block">*@
@*		контент*@
	@*	</div>*@
	
@*	<canvas id="c"></canvas>*@
@*	<div class="content">*@
@*		*@
@*		<a class="btn" href="https://themeforest.net/user/squirrellabs/portfolio?ref=SquirrelLabs">*@
@*			<svg width="64" version="1.1" xmlns="http://www.w3.org/2000/svg" height="64" viewBox="0 0 64 64" xmlns:xlink="http://www.w3.org/1999/xlink" enable-background="new 0 0 64 64">*@
@*				<g>*@
@*					<path fill="#fff" d="M22.154,54.727c0.394,0.393,0.907,0.59,1.422,0.59s1.029-0.197,1.422-0.59c0.785-0.785,0.785-2.058,0-2.843   L7.193,34.078h54.781c1.111,0,2.011-0.9,2.011-2.01c0-1.11-0.899-2.011-2.011-2.011H7.193L24.998,12.25   c0.785-0.785,0.785-2.058,0-2.843s-2.058-0.786-2.844,0L0.917,30.646c-0.785,0.786-0.785,2.058,0,2.843L22.154,54.727z"/>*@
@*				</g>*@
@*			</svg>*@
@*		</a>*@
@*	</div>*@
	
	<script type="text/javascript" src="/js/cloud/Detector.js"></script>
@*	<script type="text/javascript" src="/js/particle/index.js"></script>*@
	<script type="text/javascript" src="/js/cloud/three.min.js"></script>
	<script type="text/javascript" src="/js/cloud/Detector.js"></script>
	
		<script id="vs" type="x-shader/x-vertex">

			varying vec2 vUv;

			void main() {

				vUv = uv;
				gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

			}

		</script>

		<script id="fs" type="x-shader/x-fragment">

			uniform sampler2D map;

			uniform vec3 fogColor;
			uniform float fogNear;
			uniform float fogFar;

			varying vec2 vUv;

			void main() {

				float depth = gl_FragCoord.z / gl_FragCoord.w;
				float fogFactor = smoothstep( fogNear, fogFar, depth );

				gl_FragColor = texture2D( map, vUv );
				gl_FragColor.w *= pow( gl_FragCoord.z, 20.0 );
				gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );

			}

		</script>

	<script type="text/javascript">

		if ( ! Detector.webgl ) Detector.addGetWebGLMessage();

		var container;
		var camera, scene, renderer;
		var mesh, geometry, material;

		var mouseX = 0, mouseY = 0;
		var start_time = Date.now();

		var windowHalfX = window.innerWidth / 2;
		var windowHalfY = window.innerHeight / 2;

		init();

		function init() {

			container = document.createElement( 'div' );
			container.className = 'cloud-wrapper';
			document.body.appendChild( container );

			// Bg gradient

			var canvas = document.createElement( 'canvas' );
			canvas.width = 32;
			canvas.height = window.innerHeight;

			var context = canvas.getContext( '2d' );

			var gradient = context.createLinearGradient( 0, 0, 0, canvas.height );
			gradient.addColorStop(0, "#1e4877");
			gradient.addColorStop(0.5, "#4584b4");

			context.fillStyle = gradient;
			context.fillRect(0, 0, canvas.width, canvas.height);

			container.style.background = 'url(' + canvas.toDataURL('image/png') + ')';
			container.style.backgroundSize = '32px 100%';

			//

			camera = new THREE.PerspectiveCamera( 30, window.innerWidth / window.innerHeight, 1, 3000 );
			camera.position.z = 6000;

			scene = new THREE.Scene();

			geometry = new THREE.Geometry();

			var texture = THREE.ImageUtils.loadTexture( '/js/cloud/cloud10.png', null, animate );
			texture.magFilter = THREE.LinearMipMapLinearFilter;
			texture.minFilter = THREE.LinearMipMapLinearFilter;

			var fog = new THREE.Fog( 0x4584b4, - 100, 3000 );
				
			material = new THREE.ShaderMaterial( {

				uniforms: {

					"map": { type: "t", value: texture },
					//"fogColor" : { type: "c", value: {r:5,g:5,b:6} },
					fogColor : { type: "c", value: '#000' },
						
					"fogNear" : { type: "f", value: fog.near },
					"fogFar" : { type: "f", value: fog.far }

				},
				vertexShader: document.getElementById( 'vs' ).textContent,
				fragmentShader: document.getElementById( 'fs' ).textContent,
				depthWrite: false,
				depthTest: false,
				transparent: true

			} );

			var plane = new THREE.Mesh( new THREE.PlaneGeometry( 64, 64 ) );

			for ( var i = 0; i < 8000; i++ ) {

				plane.position.x = Math.random() * 1000 - 500;
				plane.position.y = - Math.random() * Math.random() * 200 - 15;
				plane.position.z = i;
				plane.rotation.z = Math.random() * Math.PI;
				plane.scale.x = plane.scale.y = Math.random() * Math.random() * 1.5 + 0.5;

				THREE.GeometryUtils.merge( geometry, plane );

			}

			mesh = new THREE.Mesh( geometry, material );
			scene.add( mesh );

			mesh = new THREE.Mesh( geometry, material );
			mesh.position.z = - 8000;
			scene.add( mesh );

			renderer = new THREE.WebGLRenderer( { antialias: false } );
			renderer.setSize( window.innerWidth, window.innerHeight );
			container.appendChild( renderer.domElement );

			document.addEventListener( 'mousemove', onDocumentMouseMove, false );
			window.addEventListener( 'resize', onWindowResize, false );

		}

		function onDocumentMouseMove( event ) {

			mouseX = ( event.clientX - windowHalfX ) * 0.25;
			mouseY = ( event.clientY - windowHalfY ) * 0.15;

		}

		function onWindowResize( event ) {

			camera.aspect = window.innerWidth / window.innerHeight;
			camera.updateProjectionMatrix();

			renderer.setSize( window.innerWidth, window.innerHeight );

		}

		function animate() {

			requestAnimationFrame( animate );

			position = ( ( Date.now() - start_time ) * 0.03 ) % 8000;

			camera.position.x += ( mouseX - camera.position.x ) * 0.01;
			camera.position.y += ( - mouseY - camera.position.y ) * 0.01;
			camera.position.z = - position + 8000;

			renderer.render( scene, camera );

		}

	</script>
	@*	<script type="text/javascript" src="/js/cloud/orig.js"></script>*@
	
	</body>
</html>
